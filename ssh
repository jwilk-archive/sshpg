#!/bin/sh

# Copyright © 2010, 2011, 2013, 2014 Jakub Wilk <jwilk@jwilk.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# “Software”), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

export PATH=/bin:/usr/bin/

# subversion sends SIGTERM to ssh. WTH?!
trap '' TERM

# Shortcut: if the program is called without arguments, or with --help, don't
# bother decrypting the keys.
if [ $# -eq 0 ] || [ "$1" = '--help' ]
then
    exec "$(basename "$0")" "$@"
fi

if df -t tmpfs /tmp >/dev/null 2>&1
then
    tmproot=/tmp
elif [ -d /run/shm/ ]
then
    tmproot=/run/shm
else
    tmproot=/dev/shm
fi

lockfile="$HOME/.ssh/sshpg-lock"

tmpdir=$(readlink ~/.ssh/sshpg-tmp)
if [ -n "$tmpdir" ]
then
    stat=$(stat -c '%u %a %F' "$tmpdir" 2>/dev/null)
    uid=$(id -u) || exit 1
    [ "$stat" = "$uid 700 directory" ] || tmpdir=''
fi
if [ -z "$tmpdir" ]
then
    tmpdir=$(mktemp -d "$tmproot/sshpg.XXXXXX") || exit 1
    ln -sfT $tmpdir ~/.ssh/sshpg-tmp
fi

for gpg_key in ~/.ssh/*.gpg
do
    symlink="${gpg_key%.gpg}"
    if [ -L "$symlink" ]
    then
        target=$(readlink "$symlink")
        [ -n "${target##${tmpdir}/*}" ] || continue
        rm -f "$symlink"
    fi
done

(
    set -e
    flock -w 3 9
    n=$(cat $tmpdir/counter 2>/dev/null) || true
    [ -n "$n" ] || n=0
    printf $((n+1)) > $tmpdir/counter
    for gpg_key in ~/.ssh/*.gpg
    do
        symlink="${gpg_key%.gpg}"
        if ! [ -s "$symlink" ]
        then
            key=$(mktemp $tmpdir/key.XXXXXX)
            gpg --decrypt "$gpg_key" > "$key"
            ln -sf "$key" "$symlink"
        fi
    done
) 9> "$lockfile"

[ $? -eq 0 ] || exit 1

"$(basename "$0")" "$@"

exitcode=$?

(
    set -e
    flock -w 3 9
    n=$(cat $tmpdir/counter 2>/dev/null)
    n=$((n-1))
    if [ $n -le 0 ]
    then
        for gpg_key in ~/.ssh/*.gpg
        do
            symlink="${gpg_key%.gpg}"
            rm -f $(readlink "$symlink") || true
            rm -f "$symlink"
        done
        rm -f $tmpdir/counter
    else
        printf $n > $tmpdir/counter
    fi
) 9> "$lockfile"

exit $exitcode

# vim:ts=4 sw=4 et
